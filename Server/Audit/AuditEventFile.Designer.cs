//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Server.Audit {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AuditEventFile {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AuditEventFile() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Server.Audit.AuditEventFile", typeof(AuditEventFile).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User {0} successfully authenticated on server {1}..
        /// </summary>
        public static string AuthenticationSuccess {
            get {
                return ResourceManager.GetString("AuthenticationSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User {0} unsuccessfully authorized for {1} on server {2}. Reason: {3}..
        /// </summary>
        public static string AuthorizationFailed {
            get {
                return ResourceManager.GetString("AuthorizationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User {0} successfully authorized for {1} on server {2}..
        /// </summary>
        public static string AuthorizationSuccess {
            get {
                return ResourceManager.GetString("AuthorizationSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User {0} accessed file {1} on server {2}..
        /// </summary>
        public static string FileAccessed {
            get {
                return ResourceManager.GetString("FileAccessed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User {0} created file {1} on server {2}..
        /// </summary>
        public static string FileCreated {
            get {
                return ResourceManager.GetString("FileCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User {0} deleted file {1} on server {2}..
        /// </summary>
        public static string FileDeleted {
            get {
                return ResourceManager.GetString("FileDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User {0} moved file from {1} to {2} on server {3}..
        /// </summary>
        public static string FileMoved {
            get {
                return ResourceManager.GetString("FileMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User {0} accessed folder {1} on server {2}..
        /// </summary>
        public static string FolderAccessed {
            get {
                return ResourceManager.GetString("FolderAccessed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User {0} created folder {1} on server {2}..
        /// </summary>
        public static string FolderCreated {
            get {
                return ResourceManager.GetString("FolderCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User {0} deleted folder {1} on server {2}..
        /// </summary>
        public static string FolderDeleted {
            get {
                return ResourceManager.GetString("FolderDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User {0} moved folder from {1} to {2} on server {3}..
        /// </summary>
        public static string FolderMoved {
            get {
                return ResourceManager.GetString("FolderMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error on server {0}: {1}..
        /// </summary>
        public static string ServerError {
            get {
                return ResourceManager.GetString("ServerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server started at {0}..
        /// </summary>
        public static string ServerStarted {
            get {
                return ResourceManager.GetString("ServerStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server stopped at {0}..
        /// </summary>
        public static string ServerStopped {
            get {
                return ResourceManager.GetString("ServerStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server {0} synchronized with server {1}..
        /// </summary>
        public static string ServerSynchronized {
            get {
                return ResourceManager.GetString("ServerSynchronized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server transitioned from {0} to {1}..
        /// </summary>
        public static string ServerTransitioned {
            get {
                return ResourceManager.GetString("ServerTransitioned", resourceCulture);
            }
        }
    }
}
